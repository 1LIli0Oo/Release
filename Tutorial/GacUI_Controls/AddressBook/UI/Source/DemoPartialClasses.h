/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#ifndef VCZH_GACUI_RESOURCE_CODE_GENERATOR_Demo_PARTIAL_CLASSES
#define VCZH_GACUI_RESOURCE_CODE_GENERATOR_Demo_PARTIAL_CLASSES

#include "GacUIReflection.h"

namespace demo
{
	class ICategory;
	class IViewModel;
	class MainWindow;

	class ICategory : public virtual vl::reflection::IDescriptable, public vl::reflection::Description<ICategory>
	{
	public:
		virtual demo::ICategory* GetParent() = 0;
		virtual vl::WString GetName() = 0;
		virtual vl::Ptr<vl::presentation::GuiImageData> GetImage() = 0;
		virtual vl::Ptr<vl::reflection::description::IValueObservableList> GetFolders() = 0;
		virtual vl::Ptr<vl::reflection::description::IValueObservableList> GetContacts() = 0;
	};

	class IViewModel : public virtual vl::reflection::IDescriptable, public vl::reflection::Description<IViewModel>
	{
	public:
		virtual vl::Ptr<demo::ICategory> GetRootCategory() = 0;
		virtual vl::Ptr<demo::ICategory> GetSelectedCategory() = 0;
		virtual void SetSelectedCategory(vl::Ptr<demo::ICategory> value) = 0;
		vl::Event<void()> SelectedCategoryChanged;
		virtual void AddCategory(vl::WString name) = 0;
		virtual void RemoveCategory() = 0;
	};

	template<typename TImpl>
	class MainWindow_ : public vl::presentation::controls::GuiWindow, public vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
		Ptr<demo::IViewModel> ViewModel_;
	protected:
		vl::presentation::controls::GuiToolstripCommand* commandBigIcon;
		vl::presentation::controls::GuiToolstripCommand* commandDeleteContact;
		vl::presentation::controls::GuiToolstripCommand* commandDeleteFolder;
		vl::presentation::controls::GuiToolstripCommand* commandDetail;
		vl::presentation::controls::GuiToolstripCommand* commandInformation;
		vl::presentation::controls::GuiToolstripCommand* commandList;
		vl::presentation::controls::GuiToolstripCommand* commandNewContact;
		vl::presentation::controls::GuiToolstripCommand* commandNewFolder;
		vl::presentation::controls::GuiToolstripCommand* commandSmallIcon;
		vl::presentation::controls::GuiToolstripCommand* commandTile;
		vl::presentation::controls::GuiBindableListView* listViewContacts;
		vl::presentation::controls::GuiBindableTreeView* treeViewFolders;

		void InitializeComponents(Ptr<demo::IViewModel> ViewModel)
		{
			ViewModel_ = ViewModel;
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(commandBigIcon);
				GUI_INSTANCE_REFERENCE(commandDeleteContact);
				GUI_INSTANCE_REFERENCE(commandDeleteFolder);
				GUI_INSTANCE_REFERENCE(commandDetail);
				GUI_INSTANCE_REFERENCE(commandInformation);
				GUI_INSTANCE_REFERENCE(commandList);
				GUI_INSTANCE_REFERENCE(commandNewContact);
				GUI_INSTANCE_REFERENCE(commandNewFolder);
				GUI_INSTANCE_REFERENCE(commandSmallIcon);
				GUI_INSTANCE_REFERENCE(commandTile);
				GUI_INSTANCE_REFERENCE(listViewContacts);
				GUI_INSTANCE_REFERENCE(treeViewFolders);
			}
			else
			{
				ViewModel_ = 0;
			}
		}
	public:
		MainWindow_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>(L"demo::MainWindow")
			,vl::presentation::controls::GuiWindow(vl::presentation::theme::GetCurrentTheme()->CreateWindowStyle())
			,commandBigIcon(0)
			,commandDeleteContact(0)
			,commandDeleteFolder(0)
			,commandDetail(0)
			,commandInformation(0)
			,commandList(0)
			,commandNewContact(0)
			,commandNewFolder(0)
			,commandSmallIcon(0)
			,commandTile(0)
			,listViewContacts(0)
			,treeViewFolders(0)
		{
		}

		Ptr<demo::IViewModel> GetViewModel()
		{
			return ViewModel_;
		}
	};

}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
			DECL_TYPE_INFO(demo::ICategory)
			DECL_TYPE_INFO(demo::IViewModel)
			DECL_TYPE_INFO(demo::MainWindow)

		}
	}
}

#endif
