/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#include "Demo.h"

namespace demo
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void ColorBomboItemTemplate::OnCreate()
	{
	}

	void ColorBomboItemTemplate::OnDestroy()
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ColorBomboItemTemplate::ColorBomboItemTemplate(Ptr<demo::IColorItem> ViewModel)
	{
		InitializeComponents(ViewModel);
		OnCreate();
	}

	ColorBomboItemTemplate::~ColorBomboItemTemplate()
	{
		OnDestroy();
		ClearSubscriptions();
	}
}


namespace demo
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void ColorListItemTemplate::OnCreate()
	{
	}

	void ColorListItemTemplate::OnDestroy()
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ColorListItemTemplate::ColorListItemTemplate(Ptr<demo::IColorItem> ViewModel)
	{
		InitializeComponents(ViewModel);
		OnCreate();
	}

	ColorListItemTemplate::~ColorListItemTemplate()
	{
		OnDestroy();
		ClearSubscriptions();
	}
}


namespace demo
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void MainWindow::OnCreate()
	{
	}

	void MainWindow::OnDestroy()
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MainWindow::MainWindow(Ptr<demo::IViewModel> ViewModel)
	{
		InitializeComponents(ViewModel);
		OnCreate();
	}

	MainWindow::~MainWindow()
	{
		OnDestroy();
		ClearSubscriptions();
	}
}


namespace vl
{
	namespace reflection
	{
		namespace description
		{
			#define _ ,
			IMPL_CPP_TYPE_INFO(demo::IColorItem)
			IMPL_CPP_TYPE_INFO(demo::IViewModel)
			IMPL_CPP_TYPE_INFO(demo::ColorBomboItemTemplate)
			IMPL_CPP_TYPE_INFO(demo::ColorListItemTemplate)
			IMPL_CPP_TYPE_INFO(demo::MainWindow)

			BEGIN_CLASS_MEMBER(demo::IColorItem)
				CLASS_MEMBER_BASE(::vl::reflection::IDescriptable)
				CLASS_MEMBER_METHOD(GetItemName, NO_PARAMETER);
				CLASS_MEMBER_METHOD(GetItemColor, NO_PARAMETER);
				CLASS_MEMBER_PROPERTY_READONLY(ItemName, GetItemName)
				CLASS_MEMBER_PROPERTY_READONLY(ItemColor, GetItemColor)
			END_CLASS_MEMBER(demo::IColorItem)

			BEGIN_CLASS_MEMBER(demo::IViewModel)
				CLASS_MEMBER_BASE(::vl::reflection::IDescriptable)
				CLASS_MEMBER_METHOD(GetColorItems, NO_PARAMETER);
				CLASS_MEMBER_PROPERTY_READONLY(ColorItems, GetColorItems)
			END_CLASS_MEMBER(demo::IViewModel)

			BEGIN_CLASS_MEMBER(demo::ColorBomboItemTemplate)
				CLASS_MEMBER_BASE(::vl::presentation::templates::GuiControlTemplate)
				CLASS_MEMBER_CONSTRUCTOR(demo::ColorBomboItemTemplate*(Ptr<demo::IColorItem>), { L"ViewModel" })

				CLASS_MEMBER_PROPERTY_READONLY_FAST(ViewModel)
				CLASS_MEMBER_EVENT(TextColorChanged)
				CLASS_MEMBER_PROPERTY_EVENT_FAST(TextColor, TextColorChanged)
			END_CLASS_MEMBER(demo::ColorBomboItemTemplate)

			BEGIN_CLASS_MEMBER(demo::ColorListItemTemplate)
				CLASS_MEMBER_BASE(::vl::presentation::templates::GuiTextListItemTemplate)
				CLASS_MEMBER_CONSTRUCTOR(demo::ColorListItemTemplate*(Ptr<demo::IColorItem>), { L"ViewModel" })

				CLASS_MEMBER_PROPERTY_READONLY_FAST(ViewModel)
			END_CLASS_MEMBER(demo::ColorListItemTemplate)

			BEGIN_CLASS_MEMBER(demo::MainWindow)
				CLASS_MEMBER_BASE(::vl::presentation::controls::GuiWindow)
				CLASS_MEMBER_CONSTRUCTOR(demo::MainWindow*(Ptr<demo::IViewModel>), { L"ViewModel" })

				CLASS_MEMBER_PROPERTY_READONLY_FAST(ViewModel)
			END_CLASS_MEMBER(demo::MainWindow)

			#undef _

			class DemoResourceLoader : public Object, public ITypeLoader
			{
			public:
				void Load(ITypeManager* manager)
				{
					ADD_TYPE_INFO(demo::IColorItem)
					ADD_TYPE_INFO(demo::IViewModel)
					ADD_TYPE_INFO(demo::ColorBomboItemTemplate)
					ADD_TYPE_INFO(demo::ColorListItemTemplate)
					ADD_TYPE_INFO(demo::MainWindow)
				}

				void Unload(ITypeManager* manager)
				{
				}
			};

			class DemoResourcePlugin : public Object, public vl::presentation::controls::IGuiPlugin
			{
			public:
				void Load()override
				{
					GetGlobalTypeManager()->AddTypeLoader(new DemoResourceLoader);
				}

				void AfterLoad()override
				{
				}

				void Unload()override
				{
				}
			};
			GUI_REGISTER_PLUGIN(DemoResourcePlugin)
		}
	}
}

